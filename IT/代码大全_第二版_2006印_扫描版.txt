封面                                                                            1
书名                                                                            2
目录                                                                            21
第一部分 打好基础                                                               38
第1章 欢迎进入软件构建的世界                                                    40
	1.1 什么是软件构建                                                              40
	1.2 软件构建为何如此重要                                                        43
	1.3 如何阅读本书                                                                45
	要点                                                                            45
第2章 用隐喻来更充分地理解软件开发                                              46
	2.1 隐喻的重要性                                                                46
	2.2 如何使用软件隐喻                                                            48
	2.3 常见的软件隐喻                                                              50
		软件中的书法：写作代码                                                          50
		软件的耕作法：培植系统                                                          51
		软件的牡蛎养殖观点：系统生长                                                    52
		软件构建：建造软件                                                              53
		应用软件技术：智慧工具箱                                                        57
		组合各个隐喻                                                                    57
	更多资源                                                                        57
	要点                                                                            58
第3章 三思而后行：前期准备                                                      60
	3.1 前期准备的重要性                                                            61
		前期准备适用于现代软件项目吗                                                    62
		准备不周全的诱因                                                                62
		关于开始构建之前要做前期准备的绝对有力且简明的论据                              64
	3.2 辨明你所从事的软件的类型                                                    68
		迭代开发法对前期准备的影响                                                      70
		在序列式开发法和迭代式开发法之间做出选择                                        72
	3.3 问题定义的先决条件                                                          73
	3.4 需求的先决条件                                                              75
		为什么要有正式的需求                                                            75
		稳定需求的神话                                                                  76
		在构建期间处理需求变更                                                          77
	3.5 架构的先决条件                                                              80
		架构的典型组成部分                                                              82
	3.6 花费在前期准备上的时间长度                                                  92
	更多资源                                                                        93
	要点                                                                            96
第4章 关键的“构建”决策                                                        98
	4.1 选择编程语言                                                                98
		语言描述                                                                        100
	4.2 编程约定                                                                    103
	4.3 你在技术浪潮中的位置                                                        103
		“深入一种语言去编程”的例子                                                    105
	4.4 选择主要的构建实践方法                                                      106
	要点                                                                            107
第二部分 创造高质量的代码                                                               108
第5章 软件构建中的设计                                                          110
	5.1 设计中的挑战                                                                111
		设计是一个险恶的问题                                                            111
		设计是个了无章法的过程（即使它能得出清爽的成果）                                112
		设计就是确定取舍和调整顺序的过程                                                113
		设计受到诸多限制                                                                113
		设计是不确定的                                                                  113
		设计是一个启发式过程                                                            113
		设计是自然而然形成的                                                            113
	5.2 关键的设计概念                                                              114
		软件的首要技术任务：管理复杂度                                                  114
		理想的设计特征                                                                  117
		设计的层次                                                                      119
	5.3 设计构造块：启发式方法                                                      124
		寻找现实世界中的对象                                                            124
		形成一致的抽象                                                                  126
		封装实现细节                                                                    127
		当继承能简化设计时就继承                                                        128
		隐藏秘密（信息隐藏）                                                            129
		找出容易改变的区域                                                              134
		保持松散耦合                                                                    137
		查阅常用的设计模式                                                              140
		其他的启发式方法                                                                142
		关于设计启发的总结*****                                                         145
		使用启发式方法的原则                                                            146
	5.4 设计实践                                                                    147
		迭代                                                                            147
		分而治之                                                                        148
		自上而下和自下而上的设计方法                                                    148
		建立试验性原型                                                                  151
		合作设计                                                                        152
		要做多少设计才够？                                                              152
		记录你的设计成果                                                                154
	5.5 对流行的设计方法的评论                                                      155
	更多资源                                                                        156
		软件设计，一般性问题                                                            156
		软件设计理论                                                                    157
		设计模式                                                                        157
		广义的设计                                                                      158
		标准                                                                            159
	要点                                                                            159
第6章 可以工作的类                                                              162
	6.1 类的基础：抽象数据类型                                                      163
		需要用到ADT的例子                                                               163
		使用ADT的益处                                                                   164
		更多的ADT示例                                                                   166
		在非面向对象环境中用ADT处理多份数据实例                                         168
		ADT和类                                                                         170
	6.2 良好的类接口                                                                170
		好的抽象                                                                        170
		良好的封装                                                                      176
	6.3 有关设计和实现的问题                                                        180
		包含（“有一个……”的关系）                                                    180
		继承（“是一个……”关系）                                                      181
		成员函数和数据成员                                                              187
		构造函数                                                                        188
	6.4 创建类的原因                                                                189
		应该避免的类                                                                    192
		总结：创建类的理由                                                              192
		与具体编程语言相关的问题                                                        193
	6.6 超越类：包                                                                  193
	更多资源                                                                        196
	要点                                                                            197
第7章 高质量的子程序                                                            198
	7.1 创建子程序的正当理由                                                        201
		似乎过于简单而没必要写成子程序的操作                                            203
		总结：创建子程序的理由                                                          204
	7.2 在子程序层上设计                                                            205
	7.3 好的子程序名字                                                              208
	7.4 子程序可以写多长                                                            210
	7.5 如何使用子程序参数                                                          211
	7.6 使用函数时要特别考虑的问题                                                  218
		什么时候使用函数，什么时候使用过程                                              218
		设置函数的返回值                                                                219
	7.7 宏子程序和内联子程序                                                        219
		宏子程序在使用上的限制                                                          221
		内联子程序                                                                      221
	要点                                                                            223
第8章 防范式编程                                                                224
	8.1 保护程序免遭无效输入数据的破坏                                              225
	8.2 断言                                                                        226
		建立自己的断言机制                                                              228
		使用断言的指导建议                                                              228
	8.3 错误处理技术                                                                231
		健壮性与正确性                                                                  234
		高层次设计对错误处理方式的影响                                                  234
	8.4 异常                                                                        235
	8.5 隔离程序以免遭由错误造成的损害                                              240
		隔离区与断言的关系                                                              242
	8.6 辅助调试代码                                                                242
		不要自动地把产品版本的限制强加于开发版本之上                                    242
		尽早引入辅助调试的手段                                                          243
		采用冒进式编程                                                                  243
		计划移除调试辅助代码                                                            243
	8.7 确定在产品代码中该保留多少防范式代码                                        246
	8.8 防范式编程时保持防范                                                        247
	其他资源                                                                        249
	要点                                                                            250
第9章 伪代码编程过程                                                            252
	9.1 创建类和子程序的步骤概述                                                    253
		创建一个类的步骤                                                                253
		创建子程序的步骤                                                                254
	9.2 伪代码                                                                      255
	9.3 通过伪代码编程过程创建子程序                                                257
		设计子程序                                                                      262
		编写子程序                                                                      262
		检查代码                                                                        267
		收尾工作                                                                        269
		根据需要重复上述步骤                                                            269
	9.4 伪代码编程过程之外的其他方案                                                269
	要点                                                                            271
第三部分 变量                                                                   272
第10章 使用变量的一般事项                                                       274
	10.1 数据认知                                                                   275
		数据认知测试                                                                    275
		有关数据类型的其他资源                                                          276
		10.2 轻松掌握变量定义                                                           276
		隐式声明                                                                        276
	10.3 变量初始化原则                                                             277
	10.4 作用域                                                                     281
		使变量引用局部化                                                                282
		尽可能缩短变量的“存活”时间                                                    283
		减小作用域的一般原则                                                            286
		有关缩小变量作用域的说明                                                        287
	10.5 持续性                                                                     288
	10.6 绑定时间                                                                   289
	10.7 数据类型和控制结构之间的关系                                               291
	10.8 为变量指定单一用途                                                         292
	要点                                                                            295
第11章 变量名的力量                                                             296
	11.1 选择好变量名的注意事项                                                     296
		最重要的命名注意事项                                                            297
		以问题为导向                                                                    298
		最适当的名字长度                                                                299
		变量名字的效果范围                                                              299
		变量名字中的计算值限定词                                                        300
		变量名字中的常用反义词                                                          301
	11.2 为特定类型的数据命名                                                       301
		为循环索引命名                                                                  302
		为状态变量命名                                                                  303
		为临时变量命名                                                                  304
		为布尔变量命名                                                                  305
		为枚举类型命名                                                                  306
		为常量命名                                                                      307
	11.3 命名规则的力量                                                             307
		为什么要有规则？                                                                307
		何时采用命名规则                                                                308
		正式程度                                                                        308
	11.4 非正式命名规则                                                             309
		语言无关规则的指导原则                                                          309
		语言相关规则的指导原则                                                          312
		混合语言编程的注意事项                                                          313
		命名规则示例                                                                    313
	11.5 标准前缀                                                                   316
		用户自定义类型缩写                                                              316
		语义前缀                                                                        317
		标准前缀的优点                                                                  318
	11.6 创建具备可读性的短名称                                                     319
		一般的缩写指导原则                                                              319
		语音缩写                                                                        319
		有关缩写的评论                                                                  319
	11.7 应该避免的名称                                                             322
	要点                                                                            326
第12章 基本数据类型                                                             328
	12.1 使用数的普遍规则                                                           329
	12.2 整数                                                                       330
	12.3 浮点数                                                                     332
	12.4 字符和字符串                                                               334
		C中的字符串                                                                     336
	12.5 布尔变量                                                                   338
	12.6 枚举类型                                                                   340
		如果你的语言里没有枚举类型                                                      344
	12.7 命名常量                                                                   344
	12.8 数组                                                                       347
	12.9 创建你自己的类型（类型别名）                                               348
		为什么创建自己的类型的示例是用Pascal和Ada写的？                                 351
		创建自定义数据类型的指导原则                                                    352
	要点                                                                            355
第13章 不常见的数据类型                                                         356
	13.1 结构                                                                       356
	13.2 指针                                                                       360
		用来理解指针的例子                                                              360
		使用指针的一般技巧                                                              362
		C++指针                                                                         369
		C指针                                                                           371
	13.3 全局数据                                                                   372
		与全局数据有关的常见问题                                                        372
		使用全局数据的理由                                                              375
		只有万不得已时才使用全局数据                                                    376
		用访问子程序来取代全局数据                                                      376
		如何降低使用全局数据的风险                                                      379
	其他资源                                                                        380
	要点                                                                            381
第四部分 语句                                                                       382
第14章 组织直线型代码                                                           384
	14.1 必须有明确顺序的语句                                                       384
	14.2 顺序无关的语句                                                             388
		使代码易于自上而下的阅读                                                        388
		把相关的语句组织在一起                                                          389
	要点                                                                            390
第15章 使用条件语句                                                             392
	15.1 if语句                                                                     392
		简单if-then语句                                                                 392
		if-then-else语句串                                                              395
	15.2 case语句                                                                   398
		为case选择最有效的排序                                                          398
		使用case语句的提示                                                              398
	要点                                                                            403
第16章 控制循环                                                                 404
	16.1 选择循环的种类                                                             404
		什么时候使用while循环                                                           405
		什么时候用带退出的循环                                                          406
		何时使用for循环                                                                 409
		何时使用foreach循环                                                             409
	16.2 循环控制                                                                   410
		进入循环                                                                        410
		处理好循环体                                                                    412
		退出循环                                                                        414
		检查端点                                                                        418
		使用循环变量                                                                    419
		循环应该有多长                                                                  422
	16.3 轻松创建循环——由内而外                                                   422
	16.4 循环和数组的关系                                                           424
	要点                                                                            426
第17章 不常见的控制结构                                                         428
	17.1 子程序中的多个返回                                                         429
	17.2 递归                                                                       430
		递归的例子                                                                      431
		使用递归的技巧                                                                  433
	17.3 goto                                                                       435
		反对goto的论点                                                                  435
		支持goto的观点                                                                  436
		关于goto的虚假辩论                                                              437
		错误处理和goto                                                                  438
		goto和在else子句中的共享代码                                                    443
		goto使用原则总结                                                                444
	17.4 对不常见控制结构的看法                                                     445
	其他资源                                                                        445
	要点                                                                            447
第18章 表驱动方法                                                               448
	18.1 表驱动方法使用总则                                                         448
		使用表驱动方法的两个问题                                                        449
	18.2 直接访问表                                                                 450
		示例：一个月中的天数（Days-in-Month）                                           450
		示例：保险费率                                                                  452
		例子：灵活的消息格式（Flexible-Message-Format）                                 453
		构造查询键值                                                                    460
	18.3 索引访问表                                                                 462
	18.4 阶梯访问表                                                                 463
	18.5 表查询的其他示例                                                           466
	要点                                                                            467
第19章 一般控制问题                                                             468
	19.1 布尔表达式                                                                 468
		用true和false做布尔判断                                                         468
		简化复杂的表达式                                                                470
		编写肯定形式的布尔表达式                                                        472
		用括号使布尔表达式更清晰                                                        474
		理解布尔表达式是如何求值的                                                      475
		按照数轴的顺序编写数值表达式                                                    477
		与0比较的指导原则                                                               478
		布尔表达式的常见问题                                                            479
	19.2 复合语句（块）                                                             480
	19.3 空语句                                                                     481
	19.4 驯服危险的深层嵌套                                                         482
		对减少嵌套层次的技术的总结                                                      490
	19.5 编程基础：结构化编程                                                       491
		结构化编程的三个组成部分                                                        491
	19.6 控制结构与复杂度                                                           493
		复杂度的重要性                                                                  494
		降低复杂度的一般原则                                                            494
		其它类型的复杂度                                                                496
	要点                                                                            497
第五部分 代码改善                                                                   498
第20章 软件质量概述                                                             500
	20.1 软件质量的特性                                                             500
	20.2 改善软件质量的技术                                                         503
		开发过程                                                                        504
		设置目标                                                                        505
	20.3 不同质量保障技术的相对效能                                                 506
		缺陷检测率                                                                      506
		找出缺陷的成本                                                                  509
		修正缺陷的成本                                                                  509
	20.4 什么时候进行质量保证工作                                                   510
	20.5 软件质量的普遍原理                                                         511
	要点                                                                            514
第21章 协同构造                                                                 516
	21.1 协同开发实践概要                                                           517
		协同构造是其他质量保证技术的补充                                                517
		协同构造有利于传授公司文化以及编程专业知识                                      519
		集体所有权适用于所有形式的协同构造                                              519
		在构造前后都应保持协作                                                          520
	21.2 结对编程                                                                   520
		成功运用结对编程的关键                                                          520
		结对编程的好处                                                                  521
	21.3 正式检查                                                                   522
		你期望检查能够带来什么结果                                                      522
		检查中的人员角色                                                                523
		检查的一般步骤                                                                  524
		检查中的自尊心                                                                  527
		检查和代码大全                                                                  527
		检查总结                                                                        528
	21.4 其他类型的协同开发实践                                                     529
		走查                                                                            529
		代码阅读                                                                        531
		大型演示                                                                        532
		协同构造技术的比较                                                              532
	更多资源                                                                        533
		结对编程                                                                        533
		检查                                                                            533
		相关标准                                                                        534
	要点                                                                            534
第22章 开发者测试                                                               536
	22.1 开发者测试在软件质量中的角色                                               537
		构造中测试                                                                      539
	22.2 推荐的开发者测试方法                                                       540
		先测试还是后测试                                                                540
		开发者测试的局限性                                                              541
	22.3 测试技巧锦囊                                                               542
		不完整的测试                                                                    542
		结构化的基础测试                                                                542
		数据流测试                                                                      546
		等价类划分                                                                      549
		猜测错误                                                                        550
		边界值分析                                                                      550
		几类坏数据                                                                      551
		几类好数据                                                                      552
		采用容易手工检查的测试用例                                                      553
	22.4 典型错误                                                                   554
		哪些类包含最多的错误？                                                          554
		错误的分类                                                                      555
		不完善的构造过程引发错误所占的比例                                              557
		你期望能发现多少错误                                                            558
		测试本身的错误                                                                  559
	22.5 测试支持工具                                                               560
		为测试各个类构造脚手架                                                          560
		Diff工具                                                                        561
		测试数据生成器                                                                  561
		覆盖率监视器                                                                    563
		数据记录器/日志记录器                                                           563
		符号调试工具                                                                    563
		系统干扰器                                                                      564
		错误数据库                                                                      564
	22.6 改善测试过程                                                               565
		有计划的测试                                                                    565
		重新测试（回归测试）                                                            565
		自动化测试                                                                      565
	22.7 保留测试记录                                                               566
		个人测试记录                                                                    567
	更多资源                                                                        567
		测试                                                                            567
		测试脚手架                                                                      568
		测试优先的开发                                                                  568
		相关标准                                                                        569
	要点                                                                            570
第23章 调 试                                                                    572
	23.1 调试概述                                                                   572
		调试在软件质量中所扮演的角色                                                    573
		调试效率的巨大差异                                                              573
		让你有所收获的缺陷                                                              574
		一种效率低下的调试方法                                                          576
	23.2 寻找缺陷                                                                   577
		科学的调试方法                                                                  577
		寻找缺陷的一些小建议                                                            581
		语法错误                                                                        586
	23.3 修正缺陷                                                                   587
	23.4 调试中的心理因素                                                           591
		心理取向如何导致调试时的盲目                                                    591
		“心理距离”在调试中的作用                                                      593
	23.5 调试工具——明显的和不那么明显的                                           594
		源代码比较工具                                                                  593
		编译器的警告消息                                                                594
		扩展的语法和逻辑检查                                                            594
		执行性能分析器                                                                  594
		测试框架                                                                        595
		调试器                                                                          595
	其它资源                                                                        598
	要点                                                                            599
第24章 重构                                                                     600
	24.1 软件进化的类型                                                             601
		软件进化的哲学                                                                  601
	24.2 重构简介                                                                   602
		重构的理由                                                                      602
		拒绝重构的理由                                                                  608
	24.3 特定的重构                                                                 608
		数据级的重构                                                                    608
		语句级的重构                                                                    609
		子程序级重构                                                                    610
		类实现的重构                                                                    611
		类接口的重构                                                                    612
		系统级重构                                                                      613
	24.4 安全的重构                                                                 616
		不宜重构的情况                                                                  619
	24.5 重构策略                                                                   619
	更多资源                                                                        622
	要点                                                                            622
第25章 代码调整策略                                                             624
	25.1 性能概述                                                                   625
		质量特性和性能                                                                  625
		性能和代码调整                                                                  625
	25.2 代码调整简介                                                               628
		Pareto法则                                                                      629
		一些无稽之谈                                                                    630
		何时调整代码                                                                    633
		编译器优化                                                                      633
	25.3 蜜糖和哥斯拉                                                               634
		常见的低效率之源                                                                635
		常见操作的相对效率                                                              638
		25.4 性能测量                                                                   640
		性能测量应当精确                                                                641
	25.5 反复调整                                                                   642
	25.6 代码调整方法总结                                                           643
	更多资源                                                                        643
	要点                                                                            645
第26章 代码调整方法                                                             646
	26.1 逻辑                                                                       647
		在知道答案后停止判断                                                            647
		按照出现频率来调整判断顺序                                                      649
		相似逻辑结构之间的性能比较                                                      651
		用查找表替代复杂表达式                                                          651
		使用惰性求值                                                                    652
	26.2 循环                                                                       653
		将判断外提（Unswitching）                                                       653
		合并循环                                                                        654
		展开                                                                            655
		尽可能减少再循环内部做的工作                                                    657
		哨兵值                                                                          658
		把最忙的循环放在最内层                                                          660
		削减强度                                                                        660
	26.3 数据变换                                                                   661
		使用整型数而不是浮点数                                                          662
		数组维度尽可能少                                                                662
		尽可能减少数组引用                                                              663
		使用辅助索引                                                                    664
		使用缓存机制                                                                    665
	26.4 表达式                                                                     667
		利用代数恒等式                                                                  667
		削弱运算强度                                                                    667
		编译时初始化                                                                    669
		小心系统函数                                                                    670
		使用正确的常量类型                                                              672
		预先算出结果                                                                    672
		删除公共子表达式                                                                675
	26.5 子程序                                                                     676
		将函数重写为内联                                                                676
	26.6 用低级语言重写代码                                                         677
	26.7 变得越多，事情反而更没变                                                   680
	推荐读物                                                                        681
	要点                                                                            682
第六部分 系统考虑                                                               684
第27章 程序规模对“构筑”的影响                                                 686
	27.1 交流和规模                                                                 687
	27.2 项目规模的范围                                                             688
	27.3 项目规模对错误的影响                                                       688
	27.4 项目规模对生产率的影响                                                     690
	27.5 项目规模对开发活动的影响                                                   691
		活动比例和项目规模                                                              691
		程序、产品、系统和系统产品                                                      693
		方法论和规模                                                                    694
	额外资源                                                                        695
	要点                                                                            696
第28章 管理“构筑”                                                             686
	28.1 鼓励良好的编码实践                                                         698
		设定标准的考虑事项                                                              699
		鼓励良好的编码实践的技术                                                        699
		本书的角色                                                                      701
	28.2 配置管理                                                                   701
		什么是配置管理？                                                                701
		需求变更和设计变更                                                              703
		软件代码变更                                                                    704
		工具版本                                                                        705
		机器配置                                                                        705
		备份计划                                                                        706
		有关配置管理的额外资源                                                          707
	28.3 评估“构筑”进度表                                                         708
		评估的方法                                                                      708
		评估“构筑”的工作量                                                            710
		对进度的影响                                                                    711
		评估与控制                                                                      712
		如果你落后了该怎么办                                                            712
		有关软件评估的额外资源                                                          714
	28.4 度量                                                                       714
		有关软件度量的额外资源                                                          716
	28.5 把程序员当人看                                                             717
		程序员们怎样花费时间？                                                          718
		性能差异与质量差异                                                              718
		信仰问题                                                                        720
		物理环境                                                                        721
		有关“把程序员当人看”的额外资源                                                722
	28.6 管理你的管理者                                                             723
	有关管理构造的额外资源                                                          724
	相关标准                                                                        724
	要点                                                                            725
第29章 集成                                                                     726
	29.1 集成方式的重要性                                                           726
	29.2 集成频率——阶段式集成还是增量集成                                         728
		阶段式集成                                                                      728
		增量集成                                                                        729
		增量集成的益处                                                                  730
	29.3 增量集成的策略                                                             731
		自顶向下集成                                                                    731
		自底向上集成                                                                    734
		三明治集成                                                                      735
		风险导向的集成                                                                  736
		功能导向的集成                                                                  737
		T-型集成                                                                        738
		集成方法小结                                                                    739
	29.4 Daily Build与冒烟测试                                                      739
		哪种项目能用daily build过程                                                     743
		持续集成                                                                        743
	额外资源                                                                        744
	要点                                                                            745
第30章 编程工具                                                                 746
	30.1 设计工具                                                                   747
	30.2 源代码工具                                                                 747
		编辑                                                                            747
		分析代码质量                                                                    750
		重构源代码                                                                      751
		Version Control                                                                 752
		数据词典                                                                        752
	30.3 可执行码工具                                                               753
		产生目标码                                                                      753
		除错                                                                            756
		测试                                                                            756
		代码微调                                                                        757
	30.4 工具导向的环境                                                             757
	30.5 打造你自己的编程工具                                                       758
		项目特有的工具                                                                  758
		脚本                                                                            759
	30.6 工具幻境                                                                   759
	额外资源                                                                        761
	要点                                                                            762
第七部分 软件工艺                                                               764
第31章 布局与风格                                                               766
	31.1 基本原则                                                                   767
		布局的极端情况                                                                  767
		格式化的基本原理                                                                769
		人和计算机对程序的解读                                                          769
		好布局有什么用？                                                                770
		把布局作为一种信仰                                                              772
		良好布局的目标                                                                  772
	31.2 布局技术                                                                   773
		空白区                                                                          773
		括号                                                                            775
	31.3 布局风格                                                                   775
		纯块结构                                                                        775
		模仿纯块结构                                                                    777
		使用begin-end对（花括号）指定块边界                                             779
		行尾布局                                                                        780
		哪种风格最优？                                                                  782
	31.4 控制结构的布局                                                             782
		格式化控制结构块的要点                                                          783
		其他考虑                                                                        784
	31.5 单条语句的布局                                                             790
		语句长度                                                                        790
		用空格使语句显得清楚                                                            790
		格式化后续行                                                                    791
		每行仅写一条语句                                                                795
		数据声明的布局                                                                  798
	31.6 注释的布局                                                                 800
	31.7 子程序的布局                                                               803
	31.8 类的布局                                                                   805
		类接口的布局                                                                    805
		类实现的布局                                                                    805
		文件和程序布局                                                                  808
	更多资源                                                                        811
	要点                                                                            812
第32章 自说明代码                                                               814
	32.1 外部文档                                                                   814
	32.2 编程风格作文档                                                             815
	32.3 注释或不注释                                                               818
	32.4 高效注释之关键                                                             822
		注释种类                                                                        823
		高效注释                                                                        825
		最佳注释量                                                                      829
	32.5 注释技术                                                                   829
		注释单行                                                                        829
		注释代码段                                                                      832
		注释数据声明                                                                    839
		注释控制结构                                                                    841
		注释子程序                                                                      842
		注释类、文件和程序                                                              846
	32.6 IEEE标准                                                                   850
	更多资源                                                                        852
	要点                                                                            854
第33章 个人性格                                                                 856
	33.1 个人性格是否和本书话题无关                                                 857
	33.2 聪明和谦虚                                                                 858
	33.3 求知欲                                                                     859
	33.4 诚实                                                                       863
	33.5 交流与合作                                                                 865
	33.6 创造力和纪律                                                               866
	33.7 偷懒                                                                       867
	33.8 不像你想象中那样起作用的性格                                               867
		矜持                                                                            868
		经验                                                                            868
		编程狂人                                                                        869
	33.9 习惯                                                                       870
	更多资源                                                                        871
	要点                                                                            872
第34章 软件开发艺术的有关问题                                                   874
	34.1 克服复杂性                                                                 874
	34.2 精选编程过程                                                               876
	34.3 为人写程序，其次才是为机器                                                 878
	34.4 以所用语言编程，但思路不受其约束                                           880
	34.5 借助规范集中注意力                                                         881
	34.6 基于问题域编程                                                             882
		将程序划分为不同层次的抽象                                                      882
	34.7 “当心落石”                                                               885
	34.8 反复，再反复                                                               887
	34.9 汝当分离软件与信仰                                                         888
	要点                                                                            890
第35章 何处有更多信息                                                           892
	35.1 关于软件创建的信息                                                         893
	35.2 创建之外的话题                                                             894
		综述资料                                                                        894
		软件工程综览                                                                    895
		其他注释过的参考书目                                                            895
	35.3 期刊                                                                       896
		初级程序员杂志                                                                  896
		高级程序员杂志                                                                  896
		专题出版物                                                                      897
	35.4 软件开发者的读书计划                                                       897
		入门级                                                                          897
		熟练级                                                                          898
		专业级                                                                          898
	35.5 参加专业组织                                                               899
参考文献                                                                        900
